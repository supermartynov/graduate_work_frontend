{"remainingRequest":"/home/ravshan/Projects/SQL_trainer/web/node_modules/babel-loader/lib/index.js!/home/ravshan/Projects/SQL_trainer/web/src/store/modules/home.js","dependencies":[{"path":"/home/ravshan/Projects/SQL_trainer/web/src/store/modules/home.js","mtime":1643877362871},{"path":"/home/ravshan/Projects/SQL_trainer/web/babel.config.js","mtime":1561114252000},{"path":"/home/ravshan/Projects/SQL_trainer/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ravshan/Projects/SQL_trainer/web/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import axios from \"../../services/api\";\nexport default {\n  actions: {\n    GET_TOPICS: function GET_TOPICS(ctx) {\n      axios.get('/topics/list').then(function (topics) {\n        console.log('topics', topics);\n      });\n    }\n  },\n  mutations: {\n    UPDATE_TOPICS: function UPDATE_TOPICS(state, topics) {\n      state.topics = topics;\n    }\n  },\n  state: {\n    topics: []\n  },\n  getters: {\n    ALL_TOPICS: function ALL_TOPICS(state) {\n      return state.topics;\n    }\n  }\n};",{"version":3,"sources":["/home/ravshan/Projects/SQL_trainer/web/src/store/modules/home.js"],"names":["axios","actions","GET_TOPICS","ctx","get","then","topics","console","log","mutations","UPDATE_TOPICS","state","getters","ALL_TOPICS"],"mappings":"AAAA,OAAOA,KAAP;AAEA,eAAe;AACXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAE,oBAASC,GAAT,EAAc;AACtBH,MAAAA,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAA+B,UAASC,MAAT,EAAiB;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEH,OAHD;AAIH;AANI,GADE;AASXG,EAAAA,SAAS,EAAE;AACPC,IAAAA,aADO,yBACOC,KADP,EACcL,MADd,EACsB;AACzBK,MAAAA,KAAK,CAACL,MAAN,GAAeA,MAAf;AACH;AAHM,GATA;AAcXK,EAAAA,KAAK,EAAE;AACHL,IAAAA,MAAM,EAAE;AADL,GAdI;AAiBXM,EAAAA,OAAO,EAAE;AACLC,IAAAA,UADK,sBACMF,KADN,EACa;AACd,aAAOA,KAAK,CAACL,MAAb;AACH;AAHI;AAjBE,CAAf","sourcesContent":["import axios from '../../services/api'\n\nexport default {\n    actions: {\n        GET_TOPICS: function(ctx) {\n            axios.get('/topics/list').then(function(topics) {\n                console.log('topics', topics);\n                \n            })\n        }\n    },\n    mutations: {\n        UPDATE_TOPICS(state, topics) {\n            state.topics = topics;\n        }\n    },\n    state: {\n        topics: []\n    },\n    getters: {\n        ALL_TOPICS(state) {\n            return state.topics;\n        }\n    },\n}"]}]}
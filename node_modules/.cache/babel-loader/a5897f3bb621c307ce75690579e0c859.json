{"remainingRequest":"/home/ravshan/Projects/SQL_trainer/web/node_modules/babel-loader/lib/index.js!/home/ravshan/Projects/SQL_trainer/web/src/store/modules/task.js","dependencies":[{"path":"/home/ravshan/Projects/SQL_trainer/web/src/store/modules/task.js","mtime":1643933359972},{"path":"/home/ravshan/Projects/SQL_trainer/web/babel.config.js","mtime":1561114252000},{"path":"/home/ravshan/Projects/SQL_trainer/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ravshan/Projects/SQL_trainer/web/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport axios from \"../../services/api\";\nexport default {\n  actions: {\n    GET_TASKS: function GET_TASKS(_ref) {\n      var commit = _ref.commit;\n      axios.get('/tasks/list').then(function (res) {\n        if (res.data.success) {\n          commit('UPDATE_TASKS', res.data.tasks);\n        }\n      });\n    },\n    GET_TASK: function GET_TASK(_ref2, _ref3) {\n      var commit = _ref2.commit;\n      var params = _ref3.params;\n      axios.get('/tasks/' + params.id).then(function (res) {\n        if (res.data.success) {\n          commit('UPDATE_TASK', res.data);\n        }\n      });\n    },\n    ADD_TASK: function ADD_TASK(ctx, element) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/tasks/add', element).then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  },\n  mutations: {\n    UPDATE_TASKS: function UPDATE_TASKS(state, tasks) {\n      state.tasks = tasks;\n    },\n    UPDATE_TASK: function UPDATE_TASK(state, task) {\n      state.task = task;\n    }\n  },\n  state: {\n    tasks: [],\n    task: {\n      difficulty: {},\n      database: {},\n      topic: {}\n    }\n  },\n  getters: {\n    ALL_TASKS: function ALL_TASKS(state) {\n      return state.tasks;\n    },\n    ONE_TASK: function ONE_TASK(state) {\n      return state.task;\n    }\n  }\n};",{"version":3,"sources":["/home/ravshan/Projects/SQL_trainer/web/src/store/modules/task.js"],"names":["axios","actions","GET_TASKS","commit","get","then","res","data","success","tasks","GET_TASK","params","id","ADD_TASK","ctx","element","Promise","resolve","reject","post","catch","err","mutations","UPDATE_TASKS","state","UPDATE_TASK","task","difficulty","database","topic","getters","ALL_TASKS","ONE_TASK"],"mappings":";AAAA,OAAOA,KAAP;AAEA,eAAe;AACXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,yBAAmB;AAAA,UAATC,MAAS,QAATA,MAAS;AAC1BH,MAAAA,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBC,IAAzB,CAA8B,UAASC,GAAT,EAAc;AACxC,YAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClBL,UAAAA,MAAM,CAAC,cAAD,EAAiBG,GAAG,CAACC,IAAJ,CAASE,KAA1B,CAAN;AACH;AACJ,OAJD;AAKH,KAPI;AAQLC,IAAAA,QAAQ,EAAE,gCAA6B;AAAA,UAAnBP,MAAmB,SAAnBA,MAAmB;AAAA,UAATQ,MAAS,SAATA,MAAS;AACnCX,MAAAA,KAAK,CAACI,GAAN,CAAU,YAAYO,MAAM,CAACC,EAA7B,EAAiCP,IAAjC,CAAsC,UAASC,GAAT,EAAc;AAChD,YAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AAClBL,UAAAA,MAAM,CAAC,aAAD,EAAgBG,GAAG,CAACC,IAApB,CAAN;AACH;AACJ,OAJD;AAKH,KAdI;AAeLM,IAAAA,QAAQ,EAAE,kBAASC,GAAT,EAAcC,OAAd,EAAuB;AAC7B,aAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzClB,QAAAA,KAAK,CAACmB,IAAN,CAAW,YAAX,EAAyBJ,OAAzB,EAAkCV,IAAlC,CAAuC,UAASC,GAAT,EAAc;AACjDW,UAAAA,OAAO,CAACX,GAAD,CAAP;AACH,SAFD,EAEGc,KAFH,CAES,UAAUC,GAAV,EAAe;AACpBH,UAAAA,MAAM,CAACG,GAAD,CAAN;AACH,SAJD;AAKH,OANM,CAAP;AAOH;AAvBI,GADE;AA0BXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YADO,wBACMC,KADN,EACaf,KADb,EACoB;AACvBe,MAAAA,KAAK,CAACf,KAAN,GAAcA,KAAd;AACH,KAHM;AAIPgB,IAAAA,WAJO,uBAIKD,KAJL,EAIYE,IAJZ,EAIkB;AACrBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACH;AANM,GA1BA;AAkCXF,EAAAA,KAAK,EAAE;AACHf,IAAAA,KAAK,EAAE,EADJ;AAEHiB,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,EADV;AAEFC,MAAAA,QAAQ,EAAE,EAFR;AAGFC,MAAAA,KAAK,EAAE;AAHL;AAFH,GAlCI;AA0CXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,qBACKP,KADL,EACY;AACb,aAAOA,KAAK,CAACf,KAAb;AACH,KAHI;AAILuB,IAAAA,QAJK,oBAIIR,KAJJ,EAIW;AACZ,aAAOA,KAAK,CAACE,IAAb;AACH;AANI;AA1CE,CAAf","sourcesContent":["import axios from '../../services/api'\n\nexport default {\n    actions: {\n        GET_TASKS: function({commit}) {\n            axios.get('/tasks/list').then(function(res) {\n                if (res.data.success) {\n                    commit('UPDATE_TASKS', res.data.tasks);\n                }\n            })\n        },\n        GET_TASK: function({commit}, {params}) {\n            axios.get('/tasks/' + params.id).then(function(res) {\n                if (res.data.success) {\n                    commit('UPDATE_TASK', res.data);\n                }\n            })\n        },\n        ADD_TASK: function(ctx, element) {\n            return new Promise(function(resolve, reject) {\n                axios.post('/tasks/add', element).then(function(res) {\n                    resolve(res);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        }\n    },\n    mutations: {\n        UPDATE_TASKS(state, tasks) {\n            state.tasks = tasks;\n        },\n        UPDATE_TASK(state, task) {\n            state.task = task;\n        }\n    },\n    state: {\n        tasks: [],\n        task: {\n            difficulty: {},\n            database: {},\n            topic: {}\n        }\n    },\n    getters: {\n        ALL_TASKS(state) {\n            return state.tasks;\n        },\n        ONE_TASK(state) {\n            return state.task;\n        }\n    },\n}"]}]}